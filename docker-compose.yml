version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - CONFIG_PATH=/app/config/config.yaml
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - vault-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=secure_cell_vault
      - POSTGRES_PASSWORD=changeme  # Change this in production!
      - POSTGRES_DB=secure_cell_vault
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - vault-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secure_cell_vault"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    command: redis-server --requirepass changeme  # Change this in production!
    volumes:
      - redis-data:/data
    networks:
      - vault-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - app
    networks:
      - vault-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
  redis-data:

networks:
  vault-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16